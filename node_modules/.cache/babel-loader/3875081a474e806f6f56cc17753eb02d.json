{"ast":null,"code":"var _jsxFileName = \"/home/brenner/Documentos/PERSONAL_PROJECTS_PAGES/DIO/BOOTCAMP_EDUZZ/PROJETO_GITHUB_API_INTERFACE/GitHub_Api_Interface_By_DIO/githube-api/src/providers/github_provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useCallback } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\nexport const GithubProvider = ({\n  children\n}) => {\n  _s();\n\n  const [gitHubState, setGitHubState] = useState({\n    loading: false,\n    user: {\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blogUrl: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n\n  const getUser = username => {\n    setGitHubState(prevState => ({ ...prevState,\n      loading: !prevState.loading\n    }));\n    api.get(`users/${username}`).then(({\n      data\n    }) => {\n      setGitHubState(prevState => ({ ...prevState,\n        user: {\n          avatar: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGitHubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n    });\n  };\n\n  const contextValue = {\n    gitHubState,\n    getUser: useCallback(username => {\n      getUser(username);\n    }, [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"duTob2ioikSFgwc93gRu+O2AEdk=\");\n\n_c = GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["/home/brenner/Documentos/PERSONAL_PROJECTS_PAGES/DIO/BOOTCAMP_EDUZZ/PROJETO_GITHUB_API_INTERFACE/GitHub_Api_Interface_By_DIO/githube-api/src/providers/github_provider.js"],"names":["React","useState","createContext","useCallback","api","GithubContext","loading","user","repositories","starred","GithubProvider","children","gitHubState","setGitHubState","avatar","undefined","login","name","html_url","blogUrl","company","location","followers","following","public_gists","public_repos","getUser","username","prevState","get","then","data","avatar_url","blog","finally","contextValue"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useCallback } from 'react';\nimport { api } from '../services/api';\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n\n});\n\nexport const GithubProvider = ({ children }) => {\n  const [gitHubState, setGitHubState] = useState({\n    loading: false,\n    user: {\n      avatar: undefined,\n      login: undefined,\n      name: undefined,\n      html_url: undefined,\n      blogUrl: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0,\n      \n    },\n    repositories: [],\n    starred: [],\n  });\n\n  const getUser = (username) => {\n    setGitHubState((prevState) => ({\n      ...prevState,\n      loading: !prevState.loading,\n    }));\n\n    api.get(`users/${username}`)\n    .then(({ data }) => {\n      setGitHubState((prevState) => ({\n        ...prevState,\n        user: {\n          avatar: data.avatar_url,\n          login: data.login,\n          name: data.name,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos,\n        },\n      }));\n    }).finally(() => {\n      setGitHubState((prevState) => ({\n        ...prevState,\n        loading: !prevState.loading,\n      }));\n    })\n  };\n\n\n\n  const contextValue = {\n    gitHubState,\n    getUser: useCallback(\n      (username) => {\n        getUser(username)\n      },\n      []\n    ),\n  };\n  \n  return (\n    <GithubContext.Provider value={contextValue}>\n      {children}\n    </GithubContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}